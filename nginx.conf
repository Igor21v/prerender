server {

  index index.html index.htm index.nginx-debian.html;

  server_name webitem.ru www.webitem.ru;

  #Редирект на страницу без www и слеша в конце пути
  set $redirect 0;
  set $new_host $host;
  set $new_uri $uri;
  if ($host ~* www\.(.*)) {
    set $new_host $1;
    set $redirect 1;
  }
  if ($uri ~* ^/(.*)/) {
    set $new_uri /$1;
    #set $redirect 1;
  }
  if ($redirect = 1) {
    return 301 https://$new_host$new_uri;
  }


  location ~ ^/api/(.*)$ {
    set $query $1;
    proxy_pass $scheme://127.0.0.1:8443/$1$is_args$args;
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location / {
    root /var/www/webitem/html;
    try_files $uri @prerender;
  }

  location /static/ {
    root /var/www/webitem;
    add_header Access-Control-Allow-Origin "*";
  }

  location @prerender {
    #proxy_set_header X-Prerender-Token YOUR_TOKEN;

    set $prerender 0;
    if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest\/0\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp") {
      set $prerender 1;
    }
    if ($args ~ "_escaped_fragment_") {
      set $prerender 1;
    }
    if ($http_user_agent ~ "Prerender") {
      set $prerender 0;
    }
    if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
      set $prerender 0;
    }

    #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
    resolver 8.8.8.8;
    root /var/www/webitem/html;
    if ($prerender = 1) {
      # set $prerender "localhost:3000";
      rewrite (.*) /render/?url=$scheme://$host$1 break;
      proxy_pass http://localhost:3000;
    }
    if ($prerender = 0) {
      rewrite .* /index.html break;
    }
  }

  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/webitem.ru/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/webitem.ru/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}
server {

  #Убираем слеш в конце пути если есть
  rewrite ^/(.*)/$ /$1;
  #Редирект на https без www.
  return 301 https://webitem.ru$uri;

  listen 80;
  listen [::]:80;

  server_name webitem.ru www.webitem.ru;
  return 404; # managed by Certbot
}